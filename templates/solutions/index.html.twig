{% extends 'base.html.twig' %}

{% block title %}Bledi Solutions{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <style>
        /* Style for table rows on hover */
        table tbody tr:hover {
            background-color: #f5f5f5; /* Change background color on hover */
            cursor: pointer; /* Change cursor to pointer on hover */
        }
    </style>
{% endblock %}

{% block body %}

    <div class="card">
        <div class="card-body">
            <h4 class="card-title">Data table</h4>
            {# Display Flash Messages #}
            {% for flashMessage in app.session.flashbag.get('success') %}
                <div class="alert alert-success">
                    {{ flashMessage }}
                </div>
            {% endfor %}
            <div class="row mb-3">
                <div class="col-sm-12 col-md-6">
                    <div id="order-listing_filter" class="dataTables_filter">
                        <input type="search" class="form-control" id="searchInput" placeholder="Search">
                    </div>
                </div>
                <div class="col-sm-12 col-md-6 text-right">
                    <a href="{{ path('app_solutions_new') }}" class="btn btn-primary">Create New</a>
                </div>
            </div>
            <div class="row">
                <div class="col-12">
                    <div class="table-responsive">
                        <table id="order-listing" class="table">
                            <thead>
                            <tr>
                                <!--<th>IdSol</th>-->
                                <th>DescriptionSol</th>
                                <th>DatedSol</th>
                                <th>DatefSol</th>
                                <th>EtatSol</th>
                                <th>BudgetSol</th>
                                <!-- Remove the 'Actions' column -->
                            </tr>
                            </thead>
                            <tbody>
                            {% for solution in solutions %}
                                <tr class="solution-row" data-url="{{ path('app_solutions_show', {'idSol': solution.idSol}) }}">
                                    <!--<td>{{ solution.idSol }}</td>-->
                                    <td>{{ solution.descriptionSol }}</td>
                                    <td>{{ solution.datedSol ? solution.datedSol|date('Y-m-d') : '' }}</td>
                                    <td>{{ solution.datefSol ? solution.datefSol|date('Y-m-d') : '' }}</td>
                                    <td><span class="badge badge-info">{{ solution.etatSol }}</span></td>
                                    <td>{{ solution.budgetSol }}</td>
                                </tr>
                            {% else %}
                                <tr>
                                    <td colspan="5">No records found</td>
                                </tr>
                            {% endfor %}
                            </tbody>
                        </table>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="card">
                                    <div class="card-body">
                                        <h5 class="card-title">Solutions Statistics</h5>
                                        <ul>
                                            {% for state, count in statistics %}
                                                <li>{{ state }}: {{ count }}</li>
                                            {% endfor %}
                                        </ul>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <canvas id="pieChart"></canvas>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Get the statistics data passed from the controller
            const statistics = {{ statistics|json_encode|raw }};

            // Prepare data for Chart.js
            const labels = Object.keys(statistics);
            const data = Object.values(statistics);

            // Create a pie chart
            const ctx = document.getElementById('pieChart').getContext('2d');
            const myPieChart = new Chart(ctx, {
                type: 'pie',
                data: {
                    labels: labels,
                    datasets: [{
                        data: data,
                        backgroundColor: [
                            'rgba(255, 99, 132, 0.7)',
                            'rgba(54, 162, 235, 0.7)',
                            'rgba(255, 206, 86, 0.7)',
                            'rgba(75, 192, 192, 0.7)',
                            'rgba(153, 102, 255, 0.7)',
                            'rgba(255, 159, 64, 0.7)'
                        ],
                        borderWidth: 1
                    }]
                },
                options: {
                    responsive: true
                }
            });

            // Function to remove the flash message after a specified duration
            function removeFlashMessage() {
                const flashMessage = document.querySelector('.alert-success');
                if (flashMessage) {
                    flashMessage.remove();
                }
            }

            // Call the function to remove flash message after 5 seconds (5000 milliseconds)
            setTimeout(removeFlashMessage, 5000);

            const searchInput = document.getElementById('searchInput');
            const rows = document.querySelectorAll('.solution-row');

            // Function to handle row double-click
            function handleRowDoubleClick() {
                const url = this.dataset.url;
                window.location.href = url;
            }

            // Add event listener for double-click to each row
            rows.forEach(row => {
                row.addEventListener('dblclick', handleRowDoubleClick);
            });

            // Add event listener for keyup event on the search input
            searchInput.addEventListener('keyup', function (event) {
                const searchTerm = event.target.value.trim().toLowerCase();

                rows.forEach(row => {
                    let found = false;
                    row.querySelectorAll('td').forEach(cell => {
                        const textContent = cell.textContent.trim().toLowerCase();
                        if (textContent.includes(searchTerm)) {
                            found = true;
                        }
                    });

                    if (found) {
                        row.style.display = '';
                    } else {
                        row.style.display = 'none';
                    }
                });
            });
        });
    </script>


{% endblock %}
